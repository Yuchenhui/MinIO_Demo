@{
    ViewData["Title"] = "Home Page";
}
@model List<StoredItem>
@section Styles{
    <link href="~/css/uppy.min.css" rel="stylesheet" />
    <style type="text/css">

        .not-active {
            pointer-events: none;
            cursor: default;
        }
    </style>
}
<div class="container">
    <div class="row">
        <form class="col-8" method="post" action="@Url.Action("Upload","Home")" enctype="multipart/form-data" id="uploadForm">
            <div class="input-group">
                @*<input type="file" name="file" id="uploadFile" class="form-control w-50" aria-label="Text input with segmented dropdown button">*@

                <div class="input-group-append">

                    @*                    <button type="button" class="btn btn-outline-secondary" id="uploadBtn">Upload</button>
                        <button type="submit" style="display:none" id="submitBtn">Upload</button>
                        <button class="btn btn-outline-secondary" type="button" disabled id="loadingBtn" style="display:none">
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span class="visually-hidden">Loading...</span>
                        </button>*@

                    <button type="button" class="btn btn-outline-secondary UppyModalOpenerBtn">Upload</button>
                </div>
            </div>
            <div id="drag-drop-area"></div>
        </form>

        <div class="col-4">
            <div class="input-group">
                <input type="text" id="searchTxt" class="form-control" aria-label="Text input with segmented dropdown button" value="@ViewBag.Keyword" placeholder="Input keyword">
                <div class="input-group-append">
                    <button type="button" class="btn btn-outline-secondary" id="searchBtn">Search</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="height:20px;"></div>
    <div class="row table-responsive">
        <table class="table  table-hover">
            <caption>List of files</caption>
            <thead style="background-color: #e45c2b; color: white ">
                <tr>
                    <td>File name</td>
                    <td>Size</td>
                    <td>DateTime</td>
                    <td>Status</td>
                    <td>Action</td>
                </tr>

            </thead>
            <tbody>
                @foreach (var x in Model)
                {
                    var preview = "";
                    var extract = "";
                    var delete = "";
                    var size = Math.Round(x.FileLength / 1024d / 1024d, 2);
                    if (size == 0)
                    {
                        size = 0.01;
                    }
                    if (x.IsPreview)
                    {
                        preview = " <a href=\"" + Url.Action("Preview", "Home", new { fileId = x.FileId, keyword = ViewBag.Keyword, type = x.PreviewType }) + "\"  target=\"_blank\">Preview</a>";
                    }
                    if (x.FileStatus == FileStatus.Uploaded && x.IsIndexed == true)
                    {
                        extract = " <a href=\"" + Url.Action("Extracting", "Home", new { fileId = x.FileId }) + "\" >Extract</a>";
                    }
                    if (x.FileStatus != FileStatus.Uploading && x.FileStatus != FileStatus.Extracting)
                    {
                        delete = " <a href=\"" + Url.Action("Delete", "Home", new { fileId = x.FileId }) + "\">Delete</a>";
                    }
                    <tr>
                        <td style="word-break:break-all">@x.FileName</td>
                        <td>@size MB</td>
                        <td>@x.CreateTime</td>
                        <td>@x.FileStatus.ToString()</td>
                        <td class="actionTd"><a href="@x.DownloadUrl" target="_blank" download="@x.FileName">Download</a> @Html.Raw(delete) @Html.Raw(preview) @Html.Raw(extract)</td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

</div>

<div style="display:none">



</div>
@section Scripts{

    <script type="text/javascript">

        $(document).ready(function () {
            $("#searchBtn").click(function () {
                var keyword = $("#searchTxt").val();
                window.location.href = "@Url.Action("Index","Home")?keyword=" + keyword;
            });

            $("#searchTxt").keyup(function (event) {
                var key = event.keyCode;
                if (key == 13) {
                    $("#searchBtn").click();
                }
            });

            $("#uploadBtn").click(function (e) {
                $("#uploadBtn").hide();
                $("#submitBtn").click();
                $("#uploadFile").prop("disabled", "disabled");
                $("#searchTxt").prop("disabled", "disabled");
                $("#searchBtn").prop("disabled", "disabled");
                $("#langSel").prop("disabled", "disabled");
                $(".actionTd").find("a").addClass("not-active").attr("onclick", "javascript:void(0);");
                $("#loadingBtn").show();
            });
            var dic = {};
            var uppy = new Uppy.Core({
                debug: true,
                autoProceed: false,
            })
                .use(Uppy.Dashboard, {
                    inline: false,
                    trigger: '.UppyModalOpenerBtn',
                    showProgressDetails: true,
                    note: '',
                    target: '#drag-drop-area',
                    browserBackButtonClose: false
                })
                .use(Uppy.AwsS3,
                    {
                        getUploadParameters(file) {
                            // Send a request to our PHP signing endpoint.
                            return fetch('/Home/Upload?file=' + file.data.name + '&size=' + file.data.size + '&lang=' + $("#langSel").val(), {
                                method: 'post',
                                // Send and receive JSON.
                                headers: {
                                    accept: 'application/json',
                                    'content-type': 'application/json',
                                },
                                body: JSON.stringify({
                                    filename: file.name,
                                    contentType: file.type,
                                }),
                            }).then((response) => {
                                // Parse the JSON response.
                                return response.json()
                            }).then((data) => {
                                dic[file.id] = data.fileId;
                                // Return an object in the correct shape.
                                return {
                                    method: data.method,
                                    url: data.url,
                                    fields: data.fields,
                                    headers: data.headers,
                                }
                            })
                        }
                    })

            uppy.on('upload-success', (file, response) => {
                $.post("@Url.Action("UploadCompleted","Home")?fileId=" + dic[file.id], function (resp) { });
            });
            uppy.on('file-added', (file) => {
                var sel = $(".uppy-StatusBar-actions").find("#langSel");
                if (sel.length == 0) {
                    $(".uppy-StatusBar-actions").append("<select style=\"margin-right: 20px;\" class=\"form-select\" name=\"lang\" id=\"langSel\"><option selected>Choose Lang</option><option value=\"eng\">English</option><option value=\"chi_sim\">Simplified Chinese</option><option value=\"chi_tra\">Traditional Chinese</option></select>");
                }
                else { sel.show(); }
            });
            uppy.on('upload', (result) => {
                $("#langSel").hide();
            });
            uppy.on('dashboard:modal-closed', () => {
                window.location.href = "@Url.Action("Index","Home")";
            })
        });


    </script>

}